Passport is authentication middleware for Node.js.

Install the passport and relevant passport-* strategy packages for the desired authentication methods (e.g., passport-local for username/password).

 const passport = require('passport');
 const LocalStrategy = require('passport-local').Strategy;
 const session = require('express-session');
// Use session middleware
 app.use(session({
 secret: 'your-secret-key',
 resave: false,
 saveUninitialized: false
 }));
// Initialize Passport
 app.use(passport.initialize());
 app.use(passport.session());

 Configure local strategy :
 passport.use(new LocalStrategy(
 (username, password, done) => {
 const user = users.find(u => u.username === username);
 if (!user) {
 return done(null, false, { message: 'Incorrect username.' });
 }
 if (user.password !== password) {
 return done(null, false, { message: 'Incorrect password.' });
 }
 return done(null, user);
 }
 ));


 passport.serializeUser((user, done) => {
 done(null, user.id);
 });
passport.deserializeUser((id, done) => {
 const user = users.find(u => u.id === id);
 done(null, user);
 });

 app.post('/login',
 passport.authenticate('local', {
 successRedirect: '/profile',
 failureRedirect: '/login',
 failureFlash: true
 })
 );
app.get('/profile', (req, res) => {
 if (req.isAuthenticated()) {
 res.send('Welcome to your profile');
 } else {
 res.redirect('/login');
 }
 });
app.get('/login', (req, res) => {
 res.send('Login page');
 });

 app.get('/logout', (req, res) => {
     passport.logout();
     res.redirect('/login'); 
 })


 *************************mongoDB mongoose

 use passport-local-mongoose, 
